;; ~/.config/eww/eww.yuck (Final Version)

;;---------------------------------
;; VARIABLES & LISTENERS
;;---------------------------------
(defpoll audio_sinks :interval "1s" `~/.config/eww/scripts/get_audio_sinks.sh`)

;;---------------------------------
;; WIDGET DEFINITIONS
;;---------------------------------

;; Widget for a single application in the list
(defwidget sink-widget [index name volume muted]
  (box :class "sink-widget-box" :orientation "h" :space-evenly false :spacing 15
    (label :class "sink-name" :text name :halign "start" :limit-width 20)
    (box :class "sink-controls" :halign "end" :hexpand true :spacing 15
      (scale :class "sink-volume-scale" :value volume :min 0 :max 100 :width 120
             :onchange `~/.config/eww/scripts/control_audio.sh set_volume ${index} {}`)
      (button :class "sink-mute-button ${muted ? 'muted' : ''}" :onclick `~/.config/eww/scripts/control_audio.sh toggle_mute ${index}`
        (label :text "${muted ? '󰖁' : '󰕾'}")
      )
    )
  )
)

;; The widget/icon that will live in your bar
(defwidget per_app_volume_bar []
  (button 
    :onclick "~/.config/eww/scripts/toggle_window.sh per_app_volume_window" 
    " volumes"
  )
)


;;---------------------------------
;; WINDOW DEFINITIONS
;;---------------------------------

;; The actual bar window that contains our widget
(defwindow bar
  :monitor 0
  :geometry (geometry :x "0%" :y "5px" :width "99%" :height "30px" :anchor "top center")
  :stacking "fg"
  :exclusive true
  (box :class "bar-layout" :halign "end"
    (per_app_volume_bar)
  )
)

;; The main pop-up window with dynamic content restored
(defwindow per_app_volume_window
  :monitor 0
  :geometry (geometry :x "0" :y "40px" :width "350px" :anchor "top right")
  :stacking "fg"
  (box :class "per-app-volume-window" :orientation "v" :spacing 10
    (for sink in audio_sinks
      (sink-widget :index {sink.index} :name {sink.name} :volume {sink.volume} :muted {sink.muted})
    )
  )
)
